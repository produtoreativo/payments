name: Deploy to Amazon ECS

on:
  push:
    branches:
      - deploy

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: payments
  ECS_SERVICE: payments-service
  ECS_CLUSTER: payments-cluster
  ECS_TASK_DEFINITION: .aws/task-definition.json
  CONTAINER_NAME: payments

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: Create env file
      #   run: |
      #     touch private-key.pem
      #     echo ${{ secrets.STARKBANK_PEM }} >> private-key.pem
      #     cat private-key.pem

      - name: Create env file
        run: |
          touch .env
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
          echo SENTRY_DSN=${{ secrets.SENTRY_DSN }} >> .env
          echo STARKBANK_ID=${{ secrets.STARKBANK_ID }} >> .env
          echo STARKBANK_ENV=${{ secrets.STARKBANK_ENV }} >> .env
          echo PRIVATE_KEY=./private-key.pem
          cat .env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          # echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/t2o5k5y3
          docker build -t payments .
          docker tag payments:latest public.ecr.aws/t2o5k5y3/payments:latest
          docker push public.ecr.aws/t2o5k5y3/payments:latest

      # - name: Fill in the new image ID in the Amazon ECS task definition
      #   id: task-def
      #   uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
      #   with:
      #     task-definition: ${{ env.ECS_TASK_DEFINITION }}
      #     container-name: ${{ env.CONTAINER_NAME }}
      #     image: public.ecr.aws/t2o5k5y3/payments:latest

      # - name: Deploy Amazon ECS task definition
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@de0132cf8cdedb79975c6d42b77eb7ea193cf28e
      #   with:
      #     task-definition: ${{ steps.task-def.outputs.task-definition }}
      #     service: ${{ env.ECS_SERVICE }}
      #     cluster: ${{ env.ECS_CLUSTER }}
          #wait-for-service-stability: true